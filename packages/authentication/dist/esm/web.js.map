{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type {\n  AuthCredential as FirebaseAuthCredential,\n  AuthProvider as FirebaseAuthProvider,\n  CustomParameters as FirebaseCustomParameters,\n  User as FirebaseUser,\n  UserCredential as FirebaseUserCredential,\n} from 'firebase/auth';\nimport {\n  EmailAuthProvider,\n  FacebookAuthProvider,\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  OAuthCredential,\n  OAuthProvider,\n  TwitterAuthProvider,\n  applyActionCode,\n  confirmPasswordReset,\n  connectAuthEmulator,\n  createUserWithEmailAndPassword,\n  deleteUser,\n  getAdditionalUserInfo,\n  getAuth,\n  getRedirectResult,\n  isSignInWithEmailLink,\n  linkWithCredential,\n  linkWithPopup,\n  linkWithRedirect,\n  reload,\n  sendEmailVerification,\n  sendPasswordResetEmail,\n  sendSignInLinkToEmail,\n  signInAnonymously,\n  signInWithCustomToken,\n  signInWithEmailAndPassword,\n  signInWithEmailLink,\n  signInWithPopup,\n  signInWithRedirect,\n  unlink,\n  updateEmail,\n  updatePassword,\n  updateProfile,\n} from 'firebase/auth';\n\nimport type {\n  AdditionalUserInfo,\n  ApplyActionCodeOptions,\n  AuthCredential,\n  AuthStateChange,\n  ConfirmPasswordResetOptions,\n  CreateUserWithEmailAndPasswordOptions,\n  FirebaseAuthenticationPlugin,\n  GetCurrentUserResult,\n  GetIdTokenOptions,\n  GetIdTokenResult,\n  GetTenantIdResult,\n  IsSignInWithEmailLinkOptions,\n  IsSignInWithEmailLinkResult,\n  LinkResult,\n  LinkWithEmailAndPasswordOptions,\n  LinkWithEmailLinkOptions,\n  LinkWithOAuthOptions,\n  LinkWithPhoneNumberOptions,\n  SendPasswordResetEmailOptions,\n  SendSignInLinkToEmailOptions,\n  SetLanguageCodeOptions,\n  SetTenantIdOptions,\n  SignInOptions,\n  SignInResult,\n  SignInWithCustomTokenOptions,\n  SignInWithEmailAndPasswordOptions,\n  SignInWithEmailLinkOptions,\n  SignInWithOAuthOptions,\n  SignInWithPhoneNumberOptions,\n  UnlinkOptions,\n  UnlinkResult,\n  UpdateEmailOptions,\n  UpdatePasswordOptions,\n  UpdateProfileOptions,\n  UseEmulatorOptions,\n  User,\n} from './definitions';\nimport { ProviderId } from './definitions';\n\nexport class FirebaseAuthenticationWeb\n  extends WebPlugin\n  implements FirebaseAuthenticationPlugin\n{\n  public static readonly ERROR_NO_USER_SIGNED_IN = 'No user is signed in.';\n\n  constructor() {\n    super();\n    const auth = getAuth();\n    auth.onAuthStateChanged(user => this.handleAuthStateChange(user));\n  }\n\n  public async applyActionCode(options: ApplyActionCodeOptions): Promise<void> {\n    const auth = getAuth();\n    return applyActionCode(auth, options.oobCode);\n  }\n\n  public async createUserWithEmailAndPassword(\n    options: CreateUserWithEmailAndPasswordOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await createUserWithEmailAndPassword(\n      auth,\n      options.email,\n      options.password,\n    );\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async confirmPasswordReset(\n    options: ConfirmPasswordResetOptions,\n  ): Promise<void> {\n    const auth = getAuth();\n    return confirmPasswordReset(auth, options.oobCode, options.newPassword);\n  }\n\n  public async deleteUser(): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return deleteUser(currentUser);\n  }\n\n  public async getCurrentUser(): Promise<GetCurrentUserResult> {\n    const auth = getAuth();\n    const userResult = this.createUserResult(auth.currentUser);\n    const result: GetCurrentUserResult = {\n      user: userResult,\n    };\n    return result;\n  }\n\n  public async getIdToken(\n    options?: GetIdTokenOptions,\n  ): Promise<GetIdTokenResult> {\n    const auth = getAuth();\n    if (!auth.currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    const idToken = await auth.currentUser.getIdToken(options?.forceRefresh);\n    const result: GetIdTokenResult = {\n      token: idToken || '',\n    };\n    return result;\n  }\n\n  public async getRedirectResult(): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await getRedirectResult(auth);\n    const authCredential = userCredential\n      ? OAuthProvider.credentialFromResult(userCredential)\n      : null;\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async getTenantId(): Promise<GetTenantIdResult> {\n    const auth = getAuth();\n    return {\n      tenantId: auth.tenantId,\n    };\n  }\n\n  public async isSignInWithEmailLink(\n    options: IsSignInWithEmailLinkOptions,\n  ): Promise<IsSignInWithEmailLinkResult> {\n    const auth = getAuth();\n    return {\n      isSignInWithEmailLink: isSignInWithEmailLink(auth, options.emailLink),\n    };\n  }\n\n  public async linkWithApple(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new OAuthProvider(ProviderId.APPLE);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithEmailAndPassword(\n    options: LinkWithEmailAndPasswordOptions,\n  ): Promise<LinkResult> {\n    const authCredential = EmailAuthProvider.credential(\n      options.email,\n      options.password,\n    );\n    const userCredential = await this.linkCurrentUserWithCredential(\n      authCredential,\n    );\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithEmailLink(\n    options: LinkWithEmailLinkOptions,\n  ): Promise<LinkResult> {\n    const authCredential = EmailAuthProvider.credentialWithLink(\n      options.email,\n      options.emailLink,\n    );\n    const userCredential = await this.linkCurrentUserWithCredential(\n      authCredential,\n    );\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithFacebook(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new FacebookAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      FacebookAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithGameCenter(): Promise<LinkResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async linkWithGithub(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new GithubAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      GithubAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithGoogle(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new GoogleAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      GoogleAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithMicrosoft(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new OAuthProvider(ProviderId.MICROSOFT);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithPhoneNumber(\n    _options: LinkWithPhoneNumberOptions,\n  ): Promise<LinkResult> {\n    throw new Error('Not implemented on web.');\n  }\n\n  public async linkWithPlayGames(): Promise<LinkResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async linkWithTwitter(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new TwitterAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      TwitterAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithYahoo(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new OAuthProvider(ProviderId.YAHOO);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async reload(): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return reload(currentUser);\n  }\n\n  public async sendEmailVerification(): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return sendEmailVerification(currentUser);\n  }\n\n  public async sendPasswordResetEmail(\n    options: SendPasswordResetEmailOptions,\n  ): Promise<void> {\n    const auth = getAuth();\n    return sendPasswordResetEmail(auth, options.email);\n  }\n\n  public async sendSignInLinkToEmail(\n    options: SendSignInLinkToEmailOptions,\n  ): Promise<void> {\n    const auth = getAuth();\n    return sendSignInLinkToEmail(\n      auth,\n      options.email,\n      options.actionCodeSettings,\n    );\n  }\n\n  public async setLanguageCode(options: SetLanguageCodeOptions): Promise<void> {\n    const auth = getAuth();\n    auth.languageCode = options.languageCode;\n  }\n\n  public async signInAnonymously(): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInAnonymously(auth);\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async setTenantId(options: SetTenantIdOptions): Promise<void> {\n    const auth = getAuth();\n    auth.tenantId = options.tenantId;\n  }\n\n  public async signInWithApple(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new OAuthProvider(ProviderId.APPLE);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithCustomToken(\n    options: SignInWithCustomTokenOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInWithCustomToken(auth, options.token);\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async signInWithEmailAndPassword(\n    options: SignInWithEmailAndPasswordOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInWithEmailAndPassword(\n      auth,\n      options.email,\n      options.password,\n    );\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async signInWithEmailLink(\n    options: SignInWithEmailLinkOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInWithEmailLink(\n      auth,\n      options.email,\n      options.emailLink,\n    );\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async signInWithFacebook(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new FacebookAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      FacebookAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithGithub(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new GithubAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      GithubAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithGoogle(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new GoogleAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      GoogleAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithMicrosoft(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new OAuthProvider(ProviderId.MICROSOFT);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithPhoneNumber(\n    _options: SignInWithPhoneNumberOptions,\n  ): Promise<SignInResult> {\n    throw new Error('Not implemented on web.');\n  }\n\n  public async signInWithPlayGames(): Promise<SignInResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async signInWithGameCenter(): Promise<SignInResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async signInWithTwitter(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new TwitterAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      TwitterAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithYahoo(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new OAuthProvider(ProviderId.YAHOO);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signOut(): Promise<void> {\n    const auth = getAuth();\n    await auth.signOut();\n  }\n\n  public async unlink(options: UnlinkOptions): Promise<UnlinkResult> {\n    const auth = getAuth();\n    if (!auth.currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    const user = await unlink(auth.currentUser, options.providerId);\n    const userResult = this.createUserResult(user);\n    const result: UnlinkResult = {\n      user: userResult,\n    };\n    return result;\n  }\n\n  public async updateEmail(options: UpdateEmailOptions): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return updateEmail(currentUser, options.newEmail);\n  }\n\n  public async updatePassword(options: UpdatePasswordOptions): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return updatePassword(currentUser, options.newPassword);\n  }\n\n  public async updateProfile(options: UpdateProfileOptions): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return updateProfile(currentUser, options);\n  }\n\n  public async useAppLanguage(): Promise<void> {\n    const auth = getAuth();\n    auth.useDeviceLanguage();\n  }\n\n  public async useEmulator(options: UseEmulatorOptions): Promise<void> {\n    const auth = getAuth();\n    const port = options.port || 9099;\n    connectAuthEmulator(auth, `${options.host}:${port}`);\n  }\n\n  private handleAuthStateChange(user: FirebaseUser | null): void {\n    const userResult = this.createUserResult(user);\n    const change: AuthStateChange = {\n      user: userResult,\n    };\n    this.notifyListeners('authStateChange', change);\n  }\n\n  private applySignInOptions(\n    options: SignInOptions,\n    provider: OAuthProvider | GoogleAuthProvider | FacebookAuthProvider,\n  ) {\n    if (options.customParameters) {\n      const customParameters: FirebaseCustomParameters = {};\n      options.customParameters.map(parameter => {\n        customParameters[parameter.key] = parameter.value;\n      });\n      provider.setCustomParameters(customParameters);\n    }\n    if (options.scopes) {\n      for (const scope of options.scopes) {\n        provider.addScope(scope);\n      }\n    }\n  }\n\n  public signInWithPopupOrRedirect(\n    provider: FirebaseAuthProvider,\n    mode?: 'popup' | 'redirect',\n  ): Promise<FirebaseUserCredential | never> {\n    const auth = getAuth();\n    if (mode === 'redirect') {\n      return signInWithRedirect(auth, provider);\n    } else {\n      return signInWithPopup(auth, provider);\n    }\n  }\n\n  public linkCurrentUserWithPopupOrRedirect(\n    provider: FirebaseAuthProvider,\n    mode?: 'popup' | 'redirect',\n  ): Promise<FirebaseUserCredential | never> {\n    const auth = getAuth();\n    if (!auth.currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    if (mode === 'redirect') {\n      return linkWithRedirect(auth.currentUser, provider);\n    } else {\n      return linkWithPopup(auth.currentUser, provider);\n    }\n  }\n\n  public linkCurrentUserWithCredential(\n    credential: FirebaseAuthCredential,\n  ): Promise<FirebaseUserCredential> {\n    const auth = getAuth();\n    if (!auth.currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return linkWithCredential(auth.currentUser, credential);\n  }\n\n  private createSignInResult(\n    userCredential: FirebaseUserCredential | null,\n    authCredential: FirebaseAuthCredential | null,\n  ): SignInResult {\n    const userResult = this.createUserResult(userCredential?.user || null);\n    const credentialResult = this.createCredentialResult(authCredential);\n    const additionalUserInfoResult =\n      this.createAdditionalUserInfoResult(userCredential);\n    const result: SignInResult = {\n      user: userResult,\n      credential: credentialResult,\n      additionalUserInfo: additionalUserInfoResult,\n    };\n    return result;\n  }\n\n  private createCredentialResult(\n    credential: FirebaseAuthCredential | null,\n  ): AuthCredential | null {\n    if (!credential) {\n      return null;\n    }\n    const result: AuthCredential = {\n      providerId: credential.providerId,\n    };\n    if (credential instanceof OAuthCredential) {\n      result.accessToken = credential.accessToken;\n      result.idToken = credential.idToken;\n      result.secret = credential.secret;\n    }\n    return result;\n  }\n\n  private createUserResult(user: FirebaseUser | null): User | null {\n    if (!user) {\n      return null;\n    }\n    const result: User = {\n      displayName: user.displayName,\n      email: user.email,\n      emailVerified: user.emailVerified,\n      isAnonymous: user.isAnonymous,\n      phoneNumber: user.phoneNumber,\n      photoUrl: user.photoURL,\n      providerId: user.providerId,\n      tenantId: user.tenantId,\n      uid: user.uid,\n    };\n    return result;\n  }\n\n  private createAdditionalUserInfoResult(\n    credential: FirebaseUserCredential | null,\n  ): AdditionalUserInfo | null {\n    if (!credential) {\n      return null;\n    }\n    const additionalUserInfo = getAdditionalUserInfo(credential);\n    if (!additionalUserInfo) {\n      return null;\n    }\n    const { isNewUser, profile, providerId, username } = additionalUserInfo;\n    const result: AdditionalUserInfo = {\n      isNewUser,\n    };\n    if (providerId !== null) {\n      result.providerId = providerId;\n    }\n    if (profile !== null) {\n      result.profile = profile as { [key: string]: unknown };\n    }\n    if (username !== null && username !== undefined) {\n      result.username = username;\n    }\n    return result;\n  }\n}\n"]}